/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.GUI;

import java.awt.Color;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;
import main.bodyLogic.Body;
import main.bodyLogic.Controller;
import main.bodyLogic.Singleton;
import javax.swing.*;

/**
 *
 * @author Michal
 */
public class visualisationPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    
    private int j;

    private final int Iterations;
    
    public visualisationPanel() {
        initComponents();
        Iterations = (int) (Singleton.getSimulationTime()/Singleton.getTimeStep());
        j=0;
        getRange();
    }
    
    private void getRange()
    {
        Controller.calculateRange();
        maxx = Controller.getMaxx();
        maxy = Controller.getMaxy();
    }

    private double maxx;
    private double maxy;
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        int w = this.getWidth();
        int h = this.getHeight();


        g.clearRect(0, 0, w, h);
        for (Body body : Singleton.getBodyStorage()) {

            int x = (int) ((w/2 * body.getCoordinates(j).getX())/(maxx*3))+w/2;
            int y = (int)((h/2 * body.getCoordinates(j).getY())/(maxy*3))+h/2 ;
            int z = (int) (body.getCoordinates(j).getZ() % 30);
            if(z<3)
                z = 3;
            z=10;
            g.setColor(Color.blue);
            g.drawOval(x, y, z, z);
            g.fillOval(x, y, z, z);
        }
        j++;
        if (j == Iterations) {
            //showMessageDalog(null, "Koniec wizualizacji");
            return;
        }
        else
            repaint();
        try {
            Thread.sleep(75);
        } catch (InterruptedException ex) {
            Logger.getLogger(visualisationPanel.class.getName()).log(Level.SEVERE, null, ex);
        }



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
